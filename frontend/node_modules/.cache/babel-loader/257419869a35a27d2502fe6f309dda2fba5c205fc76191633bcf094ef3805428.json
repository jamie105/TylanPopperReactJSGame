{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Game.js\",\n  _s = $RefreshSig$();\n// Game.js\nimport React, { useState } from 'react';\nimport MainMenu from './MainMenu';\nimport Background from './Background';\nimport RunTime from './RunTime'; // Import the RunTime component\nimport Cloud from './Cloud';\nimport Timer from './Timer';\nimport GameOver from './GameOver';\nimport Settings from './Settings'; // Import the Settings component\nimport Help from './Help'; // Import the Help component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [clouds, setClouds] = useState([]); // Store cloud configurations\n  const [time, setTime] = useState(0); // Set an initial time\n  const [gameOver, setGameOver] = useState(false); // Add gameOver state\n  const [penalty, setPenalty] = useState(0);\n  const [initialBushes, setInitialBushes] = useState(5);\n  const [difficultyMultiplier, setDifficultyMultiplier] = useState(1);\n  const [showSettings, setShowSettings] = useState(false);\n  const handleStartGame = () => {\n    setGameStarted(true);\n  };\n  const handleGameOver = () => {\n    setGameStarted(false);\n    setGameOver(true);\n  };\n  const handleSettings = () => {\n    setShowSettings(true);\n  };\n  const handleCloseSettings = () => {\n    setShowSettings(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        score: score,\n        time: time,\n        penalty: penalty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        setTime: setTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RunTime, {\n        setScore: setScore,\n        score: score,\n        onGameOver: handleGameOver,\n        setPenalty: setPenalty,\n        initialBushes: initialBushes,\n        difficultyMultiplier: difficultyMultiplier\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), clouds.map((cloud, index) => /*#__PURE__*/_jsxDEV(Cloud, {\n        ...cloud\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {\n        score: score,\n        time: time,\n        penalty: penalty,\n        initialBushes: initialBushes,\n        difficultyMultiplier: difficultyMultiplier\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(MainMenu, {\n        onStartGame: handleStartGame,\n        onSettings: handleSettings // Open settings when clicked\n        ,\n        onHelp: () => {} /* Implement help */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n      difficultyMultiplier: difficultyMultiplier,\n      setDifficultyMultiplier: setDifficultyMultiplier,\n      initialBushes: initialBushes,\n      setInitialBushes: setInitialBushes,\n      onClose: handleCloseSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"j3XzavV0QWM8FSMlV8fkjVylABo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","MainMenu","Background","RunTime","Cloud","Timer","GameOver","Settings","Help","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","score","setScore","gameStarted","setGameStarted","clouds","setClouds","time","setTime","gameOver","setGameOver","penalty","setPenalty","initialBushes","setInitialBushes","difficultyMultiplier","setDifficultyMultiplier","showSettings","setShowSettings","handleStartGame","handleGameOver","handleSettings","handleCloseSettings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onGameOver","map","cloud","index","onStartGame","onSettings","onHelp","onClose","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Game.js"],"sourcesContent":["// Game.js\nimport React, { useState } from 'react';\nimport MainMenu from './MainMenu';\nimport Background from './Background';\nimport RunTime from './RunTime'; // Import the RunTime component\nimport Cloud from './Cloud';\nimport Timer from './Timer';\nimport GameOver from './GameOver';\nimport Settings from './Settings'; // Import the Settings component\nimport Help from './Help'; // Import the Help component\n\nconst Game = () => {\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [clouds, setClouds] = useState([]); // Store cloud configurations\n  const [time, setTime] = useState(0); // Set an initial time\n  const [gameOver, setGameOver] = useState(false); // Add gameOver state\n  const [penalty, setPenalty] = useState(0);\n  const [initialBushes, setInitialBushes] = useState(5);\n  const [difficultyMultiplier, setDifficultyMultiplier] = useState(1);\n  const [showSettings, setShowSettings] = useState(false);\n\n  const handleStartGame = () => {\n    setGameStarted(true);\n  };\n\n  const handleGameOver = () => {\n    setGameStarted(false);\n    setGameOver(true);\n  };\n\n  const handleSettings = () => {\n    setShowSettings(true);\n  };\n\n  const handleCloseSettings = () => {\n    setShowSettings(false);\n  };\n\n  return (\n    <div className=\"game-container\">\n      {gameStarted ? (\n        <>\n          <Background score={score} time={time} penalty={penalty}/>\n          <Timer setTime={setTime}/>\n          {/* Render the RunTime component */}\n          <RunTime setScore={setScore} score={score} onGameOver={handleGameOver} setPenalty={setPenalty} initialBushes={initialBushes} difficultyMultiplier={difficultyMultiplier}/>\n          {/* Render clouds */}\n          {clouds.map((cloud, index) => (\n            <Cloud key={index} {...cloud} />\n          ))}\n        </>\n      ) : (\n        <>\n          {gameOver ? (\n            <GameOver score={score} time={time} penalty={penalty} initialBushes={initialBushes} difficultyMultiplier={difficultyMultiplier}/>\n          ) : (\n            <MainMenu\n              onStartGame={handleStartGame}\n              onSettings={handleSettings} // Open settings when clicked\n              onHelp={() => {} /* Implement help */}\n            />\n          )}\n        </>\n      )}\n      {/* Render the Settings component when showSettings is true */}\n      {showSettings && (\n        <Settings\n          difficultyMultiplier={difficultyMultiplier}\n          setDifficultyMultiplier={setDifficultyMultiplier}\n          initialBushes={initialBushes}\n          setInitialBushes={setInitialBushes}\n          onClose={handleCloseSettings}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}