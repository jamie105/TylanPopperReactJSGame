{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MainMenu from './MainMenu';\nimport Background from './Background';\nimport Bush from './Bush';\nimport Timer from './Timer';\nimport Cloud from './Cloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [clouds, setClouds] = useState([]); // Store cloud configurations\n\n  useEffect(() => {\n    // Generate random initialX positions for clouds when the game starts\n    const newClouds = Array.from({\n      length: 9\n    }, (_, index) => ({\n      initialX: Math.random() * (screen.availWidth - 200) + 200,\n      y: 30 + index * 20,\n      // Adjust Y positions as needed\n      speed: 1 + Math.random() * 2 // Adjust speed as needed\n    }));\n\n    setClouds(newClouds);\n  }, []);\n  const handleStartGame = () => {\n    setGameStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bush, {\n        setScore: (setScore, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        setScore: setScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), clouds.map((cloud, index) => /*#__PURE__*/_jsxDEV(Cloud, {\n        ...cloud\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(MainMenu, {\n      onStartGame: handleStartGame,\n      onSettings: () => {} /* Implement settings */,\n      onHelp: () => {} /* Implement help */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"QoB98Bl8ayyxmWV/Xs1Q/lsTQFs=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","MainMenu","Background","Bush","Timer","Cloud","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","score","setScore","gameStarted","setGameStarted","clouds","setClouds","newClouds","Array","from","length","_","index","initialX","Math","random","screen","availWidth","y","speed","handleStartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cloud","onStartGame","onSettings","onHelp","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainMenu from './MainMenu';\nimport Background from './Background';\nimport Bush from './Bush';\nimport Timer from './Timer';\nimport Cloud from './Cloud';\n\nconst Game = () => {\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [clouds, setClouds] = useState([]); // Store cloud configurations\n\n  useEffect(() => {\n    // Generate random initialX positions for clouds when the game starts\n    const newClouds = Array.from({ length: 9 }, (_, index) => ({\n      initialX: Math.random() * (screen.availWidth-200) + 200,\n      y: 30 + index * 20, // Adjust Y positions as needed\n      speed: 1 + Math.random() * 2, // Adjust speed as needed\n    }));\n    setClouds(newClouds);\n  }, []);\n\n  const handleStartGame = () => {\n    setGameStarted(true);\n  };\n\n  return (\n    <div className=\"game-container\">\n      {gameStarted ? (\n        <>\n          <Background />\n          <Bush setScore={setScore, score} />\n          <Timer setScore={setScore} />\n          <p className=\"score\">Score: {score}</p>\n          {/* Render clouds */}\n          {clouds.map((cloud, index) => (\n            <Cloud key={index} {...cloud} />\n          ))}\n        </>\n      ) : (\n        <MainMenu\n          onStartGame={handleStartGame}\n          onSettings={() => {} /* Implement settings */}\n          onHelp={() => {} /* Implement help */}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}