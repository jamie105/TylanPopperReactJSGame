{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Cloud.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clouds = () => {\n  _s();\n  const [clouds, setClouds] = useState([]);\n  useEffect(() => {\n    // Initialize clouds with initial positions\n    const initialClouds = Array.from({\n      length: 5\n    }, (_, index) => ({\n      x: Math.random() * screen.availWidth,\n      y: Math.random() * (screen.availHeight / 4),\n      // Adjust the height as needed\n      speed: Math.random() * 2 + 1,\n      // Random speed between 1 and 3\n      size: Math.random() * 30 + 20 // Random size between 20 and 50\n    }));\n\n    setClouds(initialClouds);\n\n    // Move clouds from right to left\n    const moveClouds = () => {\n      const updatedClouds = clouds.map(cloud => {\n        cloud.x -= cloud.speed;\n        // If a cloud goes off the left side of the screen, reposition it on the right\n        if (cloud.x + cloud.size < 0) {\n          cloud.x = screen.availWidth;\n          cloud.y = Math.random() * (screen.availHeight / 4);\n        }\n        return cloud;\n      });\n      setClouds(updatedClouds);\n    };\n\n    // Start moving clouds at a regular interval\n    const cloudInterval = setInterval(moveClouds, 50);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(cloudInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clouds-container\",\n    children: clouds.map((cloud, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cloud\",\n      style: {\n        position: 'absolute',\n        left: `${cloud.x}px`,\n        top: `${cloud.y}px`,\n        width: `${cloud.size}px`,\n        height: `${cloud.size * 0.6}px`,\n        // Make clouds wider than tall\n        backgroundColor: 'white',\n        borderRadius: '50%'\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Clouds, \"4xkxqFpcsB6zYf6ks1/wm6otAiI=\");\n_c = Clouds;\nexport default Clouds;\nvar _c;\n$RefreshReg$(_c, \"Clouds\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clouds","_s","clouds","setClouds","initialClouds","Array","from","length","_","index","x","Math","random","screen","availWidth","y","availHeight","speed","size","moveClouds","updatedClouds","map","cloud","cloudInterval","setInterval","clearInterval","className","children","style","position","left","top","width","height","backgroundColor","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Cloud.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Clouds = () => {\n  const [clouds, setClouds] = useState([]);\n\n  useEffect(() => {\n    // Initialize clouds with initial positions\n    const initialClouds = Array.from({ length: 5 }, (_, index) => ({\n      x: Math.random() * screen.availWidth,\n      y: Math.random() * (screen.availHeight / 4), // Adjust the height as needed\n      speed: Math.random() * 2 + 1, // Random speed between 1 and 3\n      size: Math.random() * 30 + 20, // Random size between 20 and 50\n    }));\n    setClouds(initialClouds);\n\n    // Move clouds from right to left\n    const moveClouds = () => {\n      const updatedClouds = clouds.map(cloud => {\n        cloud.x -= cloud.speed;\n        // If a cloud goes off the left side of the screen, reposition it on the right\n        if (cloud.x + cloud.size < 0) {\n          cloud.x = screen.availWidth;\n          cloud.y = Math.random() * (screen.availHeight / 4);\n        }\n        return cloud;\n      });\n      setClouds(updatedClouds);\n    };\n\n    // Start moving clouds at a regular interval\n    const cloudInterval = setInterval(moveClouds, 50);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(cloudInterval);\n  }, []);\n\n  return (\n    <div className=\"clouds-container\">\n      {clouds.map((cloud, index) => (\n        <div\n          key={index}\n          className=\"cloud\"\n          style={{\n            position: 'absolute',\n            left: `${cloud.x}px`,\n            top: `${cloud.y}px`,\n            width: `${cloud.size}px`,\n            height: `${cloud.size * 0.6}px`, // Make clouds wider than tall\n            backgroundColor: 'white',\n            borderRadius: '50%',\n          }}\n        ></div>\n      ))}\n    </div>\n  );\n};\n\nexport default Clouds;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;MAC7DC,CAAC,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,UAAU;MACpCC,CAAC,EAAEJ,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIC,MAAM,CAACG,WAAW,GAAG,CAAC,CAAC;MAAE;MAC7CC,KAAK,EAAEN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MAAE;MAC9BM,IAAI,EAAEP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAE;IACjC,CAAC,CAAC,CAAC;;IACHT,SAAS,CAACC,aAAa,CAAC;;IAExB;IACA,MAAMe,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,aAAa,GAAGlB,MAAM,CAACmB,GAAG,CAACC,KAAK,IAAI;QACxCA,KAAK,CAACZ,CAAC,IAAIY,KAAK,CAACL,KAAK;QACtB;QACA,IAAIK,KAAK,CAACZ,CAAC,GAAGY,KAAK,CAACJ,IAAI,GAAG,CAAC,EAAE;UAC5BI,KAAK,CAACZ,CAAC,GAAGG,MAAM,CAACC,UAAU;UAC3BQ,KAAK,CAACP,CAAC,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIC,MAAM,CAACG,WAAW,GAAG,CAAC,CAAC;QACpD;QACA,OAAOM,KAAK;MACd,CAAC,CAAC;MACFnB,SAAS,CAACiB,aAAa,CAAC;IAC1B,CAAC;;IAED;IACA,MAAMG,aAAa,GAAGC,WAAW,CAACL,UAAU,EAAE,EAAE,CAAC;;IAEjD;IACA,OAAO,MAAMM,aAAa,CAACF,aAAa,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAK2B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BzB,MAAM,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEb,KAAK,kBACvBV,OAAA;MAEE2B,SAAS,EAAC,OAAO;MACjBE,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,IAAI,EAAG,GAAER,KAAK,CAACZ,CAAE,IAAG;QACpBqB,GAAG,EAAG,GAAET,KAAK,CAACP,CAAE,IAAG;QACnBiB,KAAK,EAAG,GAAEV,KAAK,CAACJ,IAAK,IAAG;QACxBe,MAAM,EAAG,GAAEX,KAAK,CAACJ,IAAI,GAAG,GAAI,IAAG;QAAE;QACjCgB,eAAe,EAAE,OAAO;QACxBC,YAAY,EAAE;MAChB;IAAE,GAVG1B,KAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtC,EAAA,CArDID,MAAM;AAAAwC,EAAA,GAANxC,MAAM;AAuDZ,eAAeA,MAAM;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}