{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/GameOver.js\";\nimport React from 'react';\nimport MathJax from 'react-mathjax';\nimport './GameOver.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameOver = ({\n  score,\n  time,\n  penalty,\n  initialBushes,\n  difficultyMultiplier,\n  regeneratingBushes\n}) => {\n  const penaltyMultiplier = 1;\n  const timeMultiplier = 0.1;\n  let regeneratingBushesMultiplier = 1;\n  if (regeneratingBushes === true) {\n    regeneratingBushesMultiplier = 3;\n  }\n  const overallScore = Math.floor((score - (penalty - initialBushes) * penaltyMultiplier - time * timeMultiplier) * difficultyMultiplier * regeneratingBushesMultiplier) * 50;\n\n  // Define the TeX formatted equation\n  const texFormula = `\\\\text{Overall Score: } \\\\lfloor ((\\\\text{score} - (\\\\text{penalty} - \\\\text{initialBushes}) \\\\cdot \\\\text{penaltyMultiplier} - \\\\text{time} \\\\cdot \\\\text{timeMultiplier}) \\\\cdot \\\\text{difficultyMultiplier}) \\\\cdot \\\\text{regeneratingBushesMultiplier} \\\\rfloor`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-over\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Overall Score: \", overallScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", time, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Penalties: \", penalty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"InitialBushes: \", initialBushes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"tex-formula-gaveover\",\n      children: /*#__PURE__*/_jsxDEV(MathJax.Provider, {\n        children: /*#__PURE__*/_jsxDEV(MathJax.Node, {\n          formula: texFormula\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = GameOver;\nexport default GameOver;\nvar _c;\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"names":["React","MathJax","jsxDEV","_jsxDEV","GameOver","score","time","penalty","initialBushes","difficultyMultiplier","regeneratingBushes","penaltyMultiplier","timeMultiplier","regeneratingBushesMultiplier","overallScore","Math","floor","texFormula","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","Node","formula","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/GameOver.js"],"sourcesContent":["import React from 'react';\nimport MathJax from 'react-mathjax';\nimport './GameOver.css'; // Import your CSS file for styling\n\nconst GameOver = ({ score, time, penalty, initialBushes, difficultyMultiplier, regeneratingBushes }) => {\n  const penaltyMultiplier = 1;\n  const timeMultiplier = 0.1;\n  let regeneratingBushesMultiplier = 1;\n  if(regeneratingBushes===true){\n    regeneratingBushesMultiplier = 3;\n  }\n  const overallScore = Math.floor(\n    ((score - ((penalty - initialBushes) * penaltyMultiplier) - (time * timeMultiplier)) *\n      difficultyMultiplier) * regeneratingBushesMultiplier) * 50\n\n  // Define the TeX formatted equation\n  const texFormula = `\\\\text{Overall Score: } \\\\lfloor ((\\\\text{score} - (\\\\text{penalty} - \\\\text{initialBushes}) \\\\cdot \\\\text{penaltyMultiplier} - \\\\text{time} \\\\cdot \\\\text{timeMultiplier}) \\\\cdot \\\\text{difficultyMultiplier}) \\\\cdot \\\\text{regeneratingBushesMultiplier} \\\\rfloor`;\n  return (\n    <div className=\"game-over\">\n      <h1>Game Over</h1>\n      <h2>Overall Score: {overallScore}</h2>\n      <p>Score: {score}</p>\n      <p>Time: {time} seconds</p>\n      <p>Penalties: {penalty}</p>\n      <p>InitialBushes: {initialBushes}</p>\n      <h5 className=\"tex-formula-gaveover\">\n      <MathJax.Provider>\n        <MathJax.Node formula={texFormula} />\n      </MathJax.Provider>\n      </h5>\n    </div>\n  );\n};\n\nexport default GameOver;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,OAAO;EAAEC,aAAa;EAAEC,oBAAoB;EAAEC;AAAmB,CAAC,KAAK;EACtG,MAAMC,iBAAiB,GAAG,CAAC;EAC3B,MAAMC,cAAc,GAAG,GAAG;EAC1B,IAAIC,4BAA4B,GAAG,CAAC;EACpC,IAAGH,kBAAkB,KAAG,IAAI,EAAC;IAC3BG,4BAA4B,GAAG,CAAC;EAClC;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAC5B,CAACX,KAAK,GAAI,CAACE,OAAO,GAAGC,aAAa,IAAIG,iBAAkB,GAAIL,IAAI,GAAGM,cAAe,IACjFH,oBAAoB,GAAII,4BAA4B,CAAC,GAAG,EAAE;;EAE9D;EACA,MAAMI,UAAU,GAAI,uQAAsQ;EAC1R,oBACEd,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAAgB,QAAA,GAAI,iBAAe,EAACL,YAAY;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtCpB,OAAA;MAAAgB,QAAA,GAAG,SAAO,EAACd,KAAK;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,GAAG,QAAM,EAACb,IAAI,EAAC,UAAQ;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3BpB,OAAA;MAAAgB,QAAA,GAAG,aAAW,EAACZ,OAAO;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MAAAgB,QAAA,GAAG,iBAAe,EAACX,aAAa;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCpB,OAAA;MAAIe,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACpChB,OAAA,CAACF,OAAO,CAACuB,QAAQ;QAAAL,QAAA,eACfhB,OAAA,CAACF,OAAO,CAACwB,IAAI;UAACC,OAAO,EAAET;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACI,EAAA,GA5BIvB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}