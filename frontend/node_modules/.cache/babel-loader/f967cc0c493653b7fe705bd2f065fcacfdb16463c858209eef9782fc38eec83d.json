{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Bush.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bush = ({\n  setScore\n}) => {\n  _s();\n  const [bushes, setBushes] = useState([]);\n  const [moleIndex, setMoleIndex] = useState(null);\n  const [moleVisible, setMoleVisible] = useState(false);\n  useEffect(() => {\n    const newBushes = Array.from({\n      length: 7\n    }, (_, index) => ({\n      x: Math.random() * 800,\n      y: Math.random() * 400\n    }));\n    setBushes(newBushes);\n    const moleInterval = setInterval(() => {\n      const newIndex = Math.floor(Math.random() * 7);\n      setMoleIndex(newIndex);\n      setMoleVisible(true);\n      setTimeout(() => {\n        setMoleVisible(false);\n      }, 500);\n    }, 3000);\n    return () => {\n      clearInterval(moleInterval);\n    };\n  }, []);\n  const handleMoleClick = () => {\n    if (moleVisible && moleIndex !== null) {\n      setScore(prevScore => prevScore + 1);\n      setMoleVisible(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bush-container\",\n      children: bushes.map((bush, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bush ${moleIndex === index ? 'with-mole' : ''}`,\n        style: {\n          position: 'absolute',\n          left: `${bush.x}px`,\n          top: `${bush.y}px`,\n          width: '50px',\n          height: '50px',\n          borderRadius: '50%',\n          backgroundColor: 'green',\n          zIndex: moleIndex === index ? 1 : 0,\n          overflow: 'hidden'\n        },\n        onClick: handleMoleClick,\n        children: moleVisible && moleIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mole\",\n          style: {\n            backgroundColor: 'brown',\n            width: '30px',\n            height: '30px',\n            borderRadius: '50%',\n            position: 'absolute',\n            top: '-20px',\n            left: '-10px',\n            zIndex: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Bush, \"8qiUDs8RnE6AgsUJ6P2JK7sv5po=\");\n_c = Bush;\nexport default Bush;\nvar _c;\n$RefreshReg$(_c, \"Bush\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bush","setScore","_s","bushes","setBushes","moleIndex","setMoleIndex","moleVisible","setMoleVisible","newBushes","Array","from","length","_","index","x","Math","random","y","moleInterval","setInterval","newIndex","floor","setTimeout","clearInterval","handleMoleClick","prevScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bush","style","position","left","top","width","height","borderRadius","backgroundColor","zIndex","overflow","onClick","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Bush.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Bush = ({ setScore }) => {\n  const [bushes, setBushes] = useState([]);\n  const [moleIndex, setMoleIndex] = useState(null);\n  const [moleVisible, setMoleVisible] = useState(false);\n\n  useEffect(() => {\n    const newBushes = Array.from({ length: 7 }, (_, index) => ({\n      x: Math.random() * 800,\n      y: Math.random() * 400,\n    }));\n    setBushes(newBushes);\n\n    const moleInterval = setInterval(() => {\n      const newIndex = Math.floor(Math.random() * 7);\n      setMoleIndex(newIndex);\n      setMoleVisible(true);\n\n      setTimeout(() => {\n        setMoleVisible(false);\n      }, 500);\n    }, 3000);\n\n    return () => {\n      clearInterval(moleInterval);\n    };\n  }, []);\n\n  const handleMoleClick = () => {\n    if (moleVisible && moleIndex !== null) {\n      setScore(prevScore => prevScore + 1);\n      setMoleVisible(false);\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"background\"></div>\n      <div className=\"bush-container\">\n        {bushes.map((bush, index) => (\n          <div\n            key={index}\n            className={`bush ${moleIndex === index ? 'with-mole' : ''}`}\n            style={{\n              position: 'absolute',\n              left: `${bush.x}px`,\n              top: `${bush.y}px`,\n              width: '50px',\n              height: '50px',\n              borderRadius: '50%',\n              backgroundColor: 'green',\n              zIndex: moleIndex === index ? 1 : 0,\n              overflow: 'hidden',\n            }}\n            onClick={handleMoleClick}\n          >\n            {moleVisible && moleIndex === index && (\n              <div\n                className=\"mole\"\n                style={{\n                  backgroundColor: 'brown',\n                  width: '30px',\n                  height: '30px',\n                  borderRadius: '50%',\n                  position: 'absolute',\n                  top: '-20px',\n                  left: '-10px',\n                  zIndex: 2,\n                }}\n              ></div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Bush;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}