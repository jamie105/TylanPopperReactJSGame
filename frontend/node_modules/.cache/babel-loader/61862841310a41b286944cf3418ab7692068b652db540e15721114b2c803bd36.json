{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Bush.js\";\n// Bush.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bush = ({\n  bushes,\n  moleIndex,\n  moleVisible,\n  molePosition,\n  handleMoleClick,\n  handleBushClick,\n  newBush\n}) => {\n  const circleSize = 50;\n  const bottomCircleY = 40;\n  const topCircleY = 25;\n  const bottomCircleSpacing = 20;\n  const topCircleSpacing = 25;\n  const renderNewBush = () => {\n    if (newBush) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bush\",\n        style: {\n          position: 'absolute',\n          left: `${newBush.x}px`,\n          top: `${newBush.y}px`,\n          zIndex: 2 // Set a higher zIndex for the bush class\n        },\n\n        onClick: () => {} /* Handle any clicks on the newBush */,\n        children: newBush.circles && renderCircles(newBush.circles)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this);\n    }\n    return null;\n  };\n  const renderCircles = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle-cluster\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        style: {\n          width: `${circleSize}px`,\n          height: `${circleSize}px`,\n          borderRadius: '50%',\n          backgroundColor: 'darkgreen',\n          position: 'absolute',\n          left: '0',\n          top: `${bottomCircleY}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        style: {\n          width: `${circleSize}px`,\n          height: `${circleSize}px`,\n          borderRadius: '50%',\n          backgroundColor: 'darkgreen',\n          // Adjust the color as needed\n          position: 'absolute',\n          left: `${bottomCircleSpacing}px`,\n          top: `${bottomCircleY}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        style: {\n          width: `${circleSize}px`,\n          height: `${circleSize}px`,\n          borderRadius: '50%',\n          backgroundColor: 'darkgreen',\n          // Adjust the color as needed\n          position: 'absolute',\n          left: `${2 * bottomCircleSpacing}px`,\n          top: `${bottomCircleY}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        style: {\n          width: `${circleSize}px`,\n          height: `${circleSize}px`,\n          borderRadius: '50%',\n          backgroundColor: 'darkgreen',\n          // Adjust the color as needed\n          position: 'absolute',\n          left: `10px`,\n          top: `${topCircleY}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        style: {\n          width: `${circleSize}px`,\n          height: `${circleSize}px`,\n          borderRadius: '50%',\n          backgroundColor: 'darkgreen',\n          // Adjust the color as needed\n          position: 'absolute',\n          left: `${5 + topCircleSpacing}px`,\n          top: `${topCircleY}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bush-container\",\n    children: [bushes.map((bush, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bush ${moleIndex === index ? 'with-mole' : ''}`,\n      style: {\n        position: 'absolute',\n        left: `${bush.x}px`,\n        top: `${bush.y}px`,\n        zIndex: 2 // Set a higher zIndex for the bush class\n      },\n\n      onClick: () => moleVisible ? handleMoleClick(index) : handleBushClick(index),\n      children: [renderCircles(), moleVisible && moleIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mole\",\n        style: {\n          backgroundColor: 'brown',\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          position: 'absolute',\n          top: `${molePosition.y - bush.y + 10}px`,\n          left: `${molePosition.x - bush.x + 30}px`,\n          zIndex: 1 // Set a lower zIndex for the mole class\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)), renderNewBush()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c = Bush;\nexport default Bush;\nvar _c;\n$RefreshReg$(_c, \"Bush\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Bush","bushes","moleIndex","moleVisible","molePosition","handleMoleClick","handleBushClick","newBush","circleSize","bottomCircleY","topCircleY","bottomCircleSpacing","topCircleSpacing","renderNewBush","className","style","position","left","x","top","y","zIndex","onClick","children","circles","renderCircles","fileName","_jsxFileName","lineNumber","columnNumber","width","height","borderRadius","backgroundColor","map","bush","index","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Bush.js"],"sourcesContent":["// Bush.js\nimport React from 'react';\n\nconst Bush = ({ bushes, moleIndex, moleVisible, molePosition, handleMoleClick, handleBushClick, newBush}) => {\n    const circleSize = 50;\n    const bottomCircleY = 40;\n    const topCircleY = 25;\n    const bottomCircleSpacing = 20;\n    const topCircleSpacing = 25;\n\n    const renderNewBush = () => {\n        if (newBush) {\n          return (\n            <div\n              className=\"bush\"\n              style={{\n                position: 'absolute',\n                left: `${newBush.x}px`,\n                top: `${newBush.y}px`,\n                zIndex: 2, // Set a higher zIndex for the bush class\n              }}\n              onClick={() => {} /* Handle any clicks on the newBush */}\n            >\n              {newBush.circles && renderCircles(newBush.circles)}\n            </div>\n          );\n        }\n        return null;\n      };\n\n  const renderCircles = () => {\n    return (\n      <div className=\"circle-cluster\">\n        <div\n          className=\"circle\"\n          style={{\n            width: `${circleSize}px`,\n            height: `${circleSize}px`,\n            borderRadius: '50%',\n            backgroundColor: 'darkgreen',\n            position: 'absolute',\n            left: '0',\n            top: `${bottomCircleY}px`,\n          }}\n        ></div>\n        <div\n          className=\"circle\"\n          style={{\n            width: `${circleSize}px`,\n            height: `${circleSize}px`,\n            borderRadius: '50%',\n            backgroundColor: 'darkgreen', // Adjust the color as needed\n            position: 'absolute',\n            left: `${bottomCircleSpacing}px`,\n            top: `${bottomCircleY}px`,\n          }}\n        ></div>\n        <div\n          className=\"circle\"\n          style={{\n            width: `${circleSize}px`,\n            height: `${circleSize}px`,\n            borderRadius: '50%',\n            backgroundColor: 'darkgreen', // Adjust the color as needed\n            position: 'absolute',\n            left: `${2 * bottomCircleSpacing}px`,\n            top: `${bottomCircleY}px`,\n          }}\n        ></div>\n        <div\n          className=\"circle\"\n          style={{\n            width: `${circleSize}px`,\n            height: `${circleSize}px`,\n            borderRadius: '50%',\n            backgroundColor: 'darkgreen', // Adjust the color as needed\n            position: 'absolute',\n            left: `10px`,\n            top: `${topCircleY}px`,\n          }}\n        ></div>\n        <div\n          className=\"circle\"\n          style={{\n            width: `${circleSize}px`,\n            height: `${circleSize}px`,\n            borderRadius: '50%',\n            backgroundColor: 'darkgreen', // Adjust the color as needed\n            position: 'absolute',\n            left: `${5 + topCircleSpacing}px`,\n            top: `${topCircleY}px`,\n          }}\n        ></div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bush-container\">\n      {bushes.map((bush, index) => (\n        <div\n          key={index}\n          className={`bush ${moleIndex === index ? 'with-mole' : ''}`}\n          style={{\n            position: 'absolute',\n            left: `${bush.x}px`,\n            top: `${bush.y}px`,\n            zIndex: 2, // Set a higher zIndex for the bush class\n          }}          \n          onClick={() => (moleVisible ? handleMoleClick(index) : handleBushClick(index))}\n        >\n          {renderCircles()}\n          {moleVisible && moleIndex === index && (\n            <div\n              className=\"mole\"\n              style={{\n                backgroundColor: 'brown',\n                width: '30px',\n                height: '30px',\n                borderRadius: '50%',\n                position: 'absolute',\n                top: `${molePosition.y - bush.y + 10}px`,\n                left: `${molePosition.x - bush.x + 30}px`,\n                zIndex: 1, // Set a lower zIndex for the mole class\n              }}\n            ></div>\n          )}\n        </div>\n      ))}\n      {/* Render the newBush */}\n      {renderNewBush()}\n    </div>\n  );  \n};\n\nexport default Bush;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}