{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/DestroyBushMimic.js\",\n  _s = $RefreshSig$();\n// DestroyBushMimic.js\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DestroyBushMimic = ({\n  x,\n  y\n}) => {\n  _s();\n  useEffect(() => {\n    console.log(`Destroyed bush at X: ${x}, Y: ${y}, Timestamp: ${Date.now()}`);\n  }, [x, y]);\n  const circleSize = 50;\n  const bottomCircleY = 40;\n  const topCircleY = 25;\n  const bottomCircleSpacing = 20;\n  const topCircleSpacing = 25;\n  const renderCircles = () => {\n    const circleStyles = [{\n      left: '0',\n      top: `${bottomCircleY}px`\n    }, {\n      left: `${bottomCircleSpacing}px`,\n      top: `${bottomCircleY}px`\n    }, {\n      left: `${2 * bottomCircleSpacing}px`,\n      top: `${bottomCircleY}px`\n    }, {\n      left: `10px`,\n      top: `${topCircleY}px`\n    }, {\n      left: `${5 + topCircleSpacing}px`,\n      top: `${topCircleY}px`\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle-cluster\",\n      children: circleStyles.map((style, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        style: {\n          width: `${circleSize}px`,\n          height: `${circleSize}px`,\n          borderRadius: '50%',\n          backgroundColor: 'darkgreen',\n          // Adjust the color as needed\n          position: 'absolute',\n          transition: 'transform 0.2s ease-in',\n          ...style\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bush-container\",\n    children: bushes.map((bush, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bush${moleIndex === index ? 'with-mole' : ''}${index.toString()}`,\n      style: {\n        position: 'absolute',\n        left: `${bush.x}px`,\n        top: `${bush.y}px`,\n        zIndex: 2 // Set a higher zIndex for the bush class\n      },\n\n      onClick: () => moleVisible ? handleMoleClick(index) : handleBushClick(index),\n      children: [renderCircles(), moleVisible && moleIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mole\",\n        style: {\n          backgroundColor: 'brown',\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          position: 'absolute',\n          top: `${molePosition.y - bush.y + 10}px`,\n          left: `${molePosition.x - bush.x + 30}px`,\n          zIndex: 1 // Set a lower zIndex for the mole class\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(DestroyBushMimic, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DestroyBushMimic;\nexport default DestroyBushMimic;\nvar _c;\n$RefreshReg$(_c, \"DestroyBushMimic\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","DestroyBushMimic","x","y","_s","console","log","Date","now","circleSize","bottomCircleY","topCircleY","bottomCircleSpacing","topCircleSpacing","renderCircles","circleStyles","left","top","className","children","map","style","index","width","height","borderRadius","backgroundColor","position","transition","fileName","_jsxFileName","lineNumber","columnNumber","bushes","bush","moleIndex","toString","zIndex","onClick","moleVisible","handleMoleClick","handleBushClick","molePosition","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/DestroyBushMimic.js"],"sourcesContent":["// DestroyBushMimic.js\nimport React, { useEffect } from 'react';\n\nconst DestroyBushMimic = ({ x, y }) => {\n  useEffect(() => {\n    console.log(`Destroyed bush at X: ${x}, Y: ${y}, Timestamp: ${Date.now()}`);\n  }, [x, y]);\n\n  const circleSize = 50;\n    const bottomCircleY = 40;\n    const topCircleY = 25;\n    const bottomCircleSpacing = 20;\n    const topCircleSpacing = 25;\n\n    const renderCircles = () => {\n        const circleStyles = [\n          {\n            left: '0',\n            top: `${bottomCircleY}px`,\n          },\n          {\n            left: `${bottomCircleSpacing}px`,\n            top: `${bottomCircleY}px`,\n          },\n          {\n            left: `${2 * bottomCircleSpacing}px`,\n            top: `${bottomCircleY}px`,\n          },\n          {\n            left: `10px`,\n            top: `${topCircleY}px`,\n          },\n          {\n            left: `${5 + topCircleSpacing}px`,\n            top: `${topCircleY}px`,\n          },\n        ];\n      \n        return (\n          <div className=\"circle-cluster\">\n            {circleStyles.map((style, index) => (\n              <div\n                key={index}\n                className=\"circle\"\n                style={{\n                  width: `${circleSize}px`,\n                  height: `${circleSize}px`,\n                  borderRadius: '50%',\n                  backgroundColor: 'darkgreen', // Adjust the color as needed\n                  position: 'absolute',\n                  transition: 'transform 0.2s ease-in',\n                  ...style,\n                }}\n              ></div>\n            ))}\n          </div>\n        );\n      };      \n\n  return (\n    <div className=\"bush-container\">\n      {bushes.map((bush, index) => (\n        <div\n        key={index}\n        className={`bush${moleIndex === index ? 'with-mole' : ''}${index.toString()}`}\n        style={{\n          position: 'absolute',\n          left: `${bush.x}px`,\n          top: `${bush.y}px`,\n          zIndex: 2, // Set a higher zIndex for the bush class\n        }}\n        onClick={() => (moleVisible ? handleMoleClick(index) : handleBushClick(index))}\n      >\n          {renderCircles()}\n          {moleVisible && moleIndex === index && (\n            <div\n              className=\"mole\"\n              style={{\n                backgroundColor: 'brown',\n                width: '30px',\n                height: '30px',\n                borderRadius: '50%',\n                position: 'absolute',\n                top: `${molePosition.y - bush.y + 10}px`,\n                left: `${molePosition.x - bush.x + 30}px`,\n                zIndex: 1, // Set a lower zIndex for the mole class\n              }}\n            ></div>\n          )}\n        </div>\n      ))}\n    </div>\n  );  \n};\n\nexport default DestroyBushMimic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}