{"ast":null,"code":"var _jsxFileName = \"/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Bush.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bush = ({\n  setScore\n}) => {\n  _s();\n  const [bushes, setBushes] = useState([]);\n  const [moleIndex, setMoleIndex] = useState(null);\n  const [moleVisible, setMoleVisible] = useState(false);\n  useEffect(() => {\n    const newBushes = Array.from({\n      length: 7\n    }, (_, index) => ({\n      x: Math.random() * (screen.availWidth - 300) + 150,\n      y: Math.random() * (screen.availHeight / 2 - 100) + screen.availHeight / 2\n    }));\n    setBushes(newBushes);\n    const moleInterval = setInterval(() => {\n      const newIndex = Math.floor(Math.random() * 7);\n      setMoleIndex(newIndex);\n      setMoleVisible(true);\n      setTimeout(() => {\n        setMoleVisible(false);\n      }, 1250);\n    }, 2000); // Set interval to 3 seconds\n\n    return () => {\n      clearInterval(moleInterval);\n    };\n  }, []);\n  const handleMoleClick = () => {\n    if (moleVisible && moleIndex !== null) {\n      setScore(prevScore => prevScore + 1);\n      setMoleVisible(false);\n      console.log(bushes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bush-container\",\n    children: bushes.map((bush, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bush\",\n      style: {\n        position: 'absolute',\n        left: `${bush.x}px`,\n        top: `${bush.y}px`,\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        backgroundColor: 'darkgreen',\n        zIndex: moleIndex === index ? 1 : 1\n      },\n      onClick: handleMoleClick,\n      children: moleVisible && moleIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mole\",\n        style: {\n          backgroundColor: 'brown',\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          position: 'absolute',\n          top: '-15px',\n          left: '10px'\n        },\n        onClick: handleMoleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Bush, \"8qiUDs8RnE6AgsUJ6P2JK7sv5po=\");\n_c = Bush;\nexport default Bush;\nvar _c;\n$RefreshReg$(_c, \"Bush\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bush","setScore","_s","bushes","setBushes","moleIndex","setMoleIndex","moleVisible","setMoleVisible","newBushes","Array","from","length","_","index","x","Math","random","screen","availWidth","y","availHeight","moleInterval","setInterval","newIndex","floor","setTimeout","clearInterval","handleMoleClick","prevScore","console","log","className","children","map","bush","style","position","left","top","width","height","borderRadius","backgroundColor","zIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jamie1053/Documents/CodingRelated/Personal/chatgpt-molegame/frontend/src/components/Bush.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Bush = ({ setScore }) => {\n  const [bushes, setBushes] = useState([]);\n  const [moleIndex, setMoleIndex] = useState(null);\n  const [moleVisible, setMoleVisible] = useState(false);\n\n  useEffect(() => {\n    const newBushes = Array.from({ length: 7 }, (_, index) => ({\n      x: Math.random() * (screen.availWidth - 300) + 150,\n      y: Math.random() * (screen.availHeight/2 - 100) + screen.availHeight/2,\n    }));\n    setBushes(newBushes);\n\n    const moleInterval = setInterval(() => {\n      const newIndex = Math.floor(Math.random() * 7);\n      setMoleIndex(newIndex);\n      setMoleVisible(true);\n\n      setTimeout(() => {\n        setMoleVisible(false);\n      }, 1250);\n    }, 2000); // Set interval to 3 seconds\n\n    return () => {\n      clearInterval(moleInterval);\n    };\n  }, []);\n\n  const handleMoleClick = () => {\n    if (moleVisible && moleIndex !== null) {\n      setScore(prevScore => prevScore + 1);\n      setMoleVisible(false);\n      console.log(bushes);\n    }\n  };\n\n  return (\n    <div className=\"bush-container\">\n      {bushes.map((bush, index) => (\n        <div\n          key={index}\n          className=\"bush\"\n          style={{\n            position: 'absolute',\n            left: `${bush.x}px`,\n            top: `${bush.y}px`,\n            width: '50px',\n            height: '50px',\n            borderRadius: '50%',\n            backgroundColor: 'darkgreen',\n            zIndex: moleIndex === index ? 1 : 1,\n          }}\n          onClick={handleMoleClick}\n        >\n          {moleVisible && moleIndex === index && (\n            <div\n              className=\"mole\"\n              style={{\n                backgroundColor: 'brown',\n                width: '30px',\n                height: '30px',\n                borderRadius: '50%',\n                position: 'absolute',\n                top: '-15px',\n                left: '10px',\n              }}\n              onClick={handleMoleClick}\n            ></div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Bush;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}